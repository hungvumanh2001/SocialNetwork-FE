{"ast":null,"code":"import { FormControl } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/status.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../service/relationship.service\";\nimport * as i5 from \"../../../service/image.service\";\nimport * as i6 from \"../../../service/like-status.service\";\nimport * as i7 from \"../../block/status-list/status-list.component\";\nexport let StatusOwnerListComponent = /*#__PURE__*/(() => {\n  class StatusOwnerListComponent {\n    constructor(statusService, activatedRoute, fb, router, relationshipService, imageService, likeService) {\n      this.statusService = statusService;\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.router = router;\n      this.relationshipService = relationshipService;\n      this.imageService = imageService;\n      this.likeService = likeService;\n      this.statuses = [];\n      this.statuz = [];\n      this.statusForm = this.fb.group({\n        content: new FormControl(''),\n        status: new FormControl('')\n      });\n    }\n\n    ngOnInit() {\n      this.currentId = localStorage.getItem(\"ID\");\n      this.activatedRoute.paramMap.subscribe(param => {\n        this.id = param.get(\"id\");\n      });\n      this.relationshipService.getRelationship(this.currentId, this.id).subscribe(data => {\n        this.relationship = data;\n      });\n      this.statusService.findAllByOwnerId(this.id).subscribe(status => {\n        this.statusesOwner = status;\n\n        for (let i = 0; i < this.statusesOwner[0].length; i++) {\n          this.likeService.check(this.statusesOwner[0][i].id, this.currentId).subscribe(data => {\n            this.statusesOwner[0][i].isLiked = data;\n          }, error => console.log(\"err\", error));\n        }\n      });\n    }\n\n    reloadCurrentRoute() {\n      let currentUrl = this.router.url;\n      this.router.navigateByUrl('/', {\n        skipLocationChange: true\n      }).then(() => {\n        this.router.navigate([currentUrl]);\n      });\n    }\n\n  }\n\n  StatusOwnerListComponent.ɵfac = function StatusOwnerListComponent_Factory(t) {\n    return new (t || StatusOwnerListComponent)(i0.ɵɵdirectiveInject(i1.StatusService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.RelationshipService), i0.ɵɵdirectiveInject(i5.ImageService), i0.ɵɵdirectiveInject(i6.LikeStatusService));\n  };\n\n  StatusOwnerListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatusOwnerListComponent,\n    selectors: [[\"app-status-owner-list\"]],\n    decls: 1,\n    vars: 6,\n    consts: [[3, \"statuses\", \"currentID\", \"id\", \"relationship\", \"statusesOwner\", \"statuz\"]],\n    template: function StatusOwnerListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-status-list\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"statuses\", ctx.statuses)(\"currentID\", ctx.currentId)(\"id\", ctx.id)(\"relationship\", ctx.relationship)(\"statusesOwner\", ctx.statusesOwner)(\"statuz\", ctx.statuz);\n      }\n    },\n    dependencies: [i7.StatusListComponent]\n  });\n  return StatusOwnerListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}