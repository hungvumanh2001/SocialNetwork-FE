{"ast":null,"code":"import { FormControl } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/comment.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ng-angular-popup\";\nexport let CommentUpdateComponent = /*#__PURE__*/(() => {\n  class CommentUpdateComponent {\n    constructor(commentService, activatedRoute, router, fb, toast) {\n      this.commentService = commentService;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.fb = fb;\n      this.toast = toast;\n      this.commentForm = this.fb.group({\n        active: new FormControl(''),\n        content: new FormControl('')\n      });\n      this.activatedRoute.paramMap.subscribe(paraMap => {\n        this.id = +paraMap.get('id');\n      });\n    }\n\n    ngOnInit() {\n      //lay gia tri\n      this.commentService.getById(this.id).subscribe(result => {\n        // @ts-ignore\n        this.comment = result;\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    editComment() {\n      const comment = {\n        // @ts-ignore\n        active: this.commentForm.value.active,\n        content: this.commentForm.value.content\n      };\n      console.log(comment); // @ts-ignore\n\n      this.commentService.edit(this.id, comment).subscribe(data => {\n        this.toast.success({\n          detail: \"Thông Báo\",\n          summary: \"Sửa bình luận thành công\",\n          duration: 3000\n        });\n        this.reloadCurrentRoute();\n      }, error => {\n        console.log(error);\n        this.toast.error({\n          detail: \"Thông Báo\",\n          summary: \"Sửa bình luận thất bại\",\n          duration: 3000\n        });\n      });\n    }\n\n    reloadCurrentRoute() {\n      let currentUrl = this.router.url;\n      this.router.navigateByUrl('/', {\n        skipLocationChange: true\n      }).then(() => {\n        this.router.navigate([currentUrl]);\n      });\n    }\n\n  }\n\n  CommentUpdateComponent.ɵfac = function CommentUpdateComponent_Factory(t) {\n    return new (t || CommentUpdateComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.NgToastService));\n  };\n\n  CommentUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommentUpdateComponent,\n    selectors: [[\"app-comment-update\"]],\n    inputs: {\n      id: \"id\"\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"row\"], [1, \"col-12\"], [3, \"formGroup\", \"keydown.enter\"], [1, \"font-group\"], [\"type\", \"text\", \"formControlName\", \"content\", \"id\", \"content\", \"placeholder\", \"content\", 1, \"form-control\", 3, \"ngModel\"], [1, \"col-2\"]],\n    template: function CommentUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"keydown.enter\", function CommentUpdateComponent_Template_form_keydown_enter_2_listener() {\n          return ctx.editComment();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"input\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(5, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.commentForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"ngModel\", ctx.comment.content);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return CommentUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}