{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/comment.service\";\nimport * as i2 from \"../../../service/status.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport let CommentCreateComponent = /*#__PURE__*/(() => {\n  class CommentCreateComponent {\n    constructor(commentService, statusService, router) {\n      this.commentService = commentService;\n      this.statusService = statusService;\n      this.router = router;\n      this.commentForm = new FormGroup({\n        content: new FormControl('')\n      });\n    }\n\n    ngOnInit() {\n      this.avatarCurrentUser = localStorage.getItem(\"AVATAR\");\n    }\n\n    submit() {\n      if (typeof this.commentId == \"undefined\" || this.commentId == 0) {\n        this.comment = {\n          content: this.commentForm.value.content,\n          userComment: {\n            id: localStorage.getItem('ID')\n          },\n          status: {\n            id: this.statusId\n          },\n          active: 1\n        };\n      } else {\n        this.comment = {\n          content: this.commentForm.value.content,\n          userComment: {\n            id: localStorage.getItem('ID')\n          },\n          status: {\n            id: this.statusId\n          },\n          comment: {\n            id: this.commentId\n          },\n          active: 1\n        };\n      }\n\n      console.log(this.comment);\n      this.commentService.save(this.comment).subscribe(() => {\n        this.commentForm.reset();\n        this.reloadCurrentRoute();\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    reloadCurrentRoute() {\n      let currentUrl = this.router.url;\n      this.router.navigateByUrl('/', {\n        skipLocationChange: true\n      }).then(() => {\n        this.router.navigate([currentUrl]);\n      });\n    }\n\n  }\n\n  CommentCreateComponent.ɵfac = function CommentCreateComponent_Factory(t) {\n    return new (t || CommentCreateComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.StatusService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  CommentCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommentCreateComponent,\n    selectors: [[\"app-comment-create\"]],\n    inputs: {\n      statusId: \"statusId\",\n      commentId: \"commentId\"\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"d-flex\", \"mb-3\"], [1, \"avatar\", \"avatar-xs\", \"me-2\"], [\"href\", \"#!\"], [\"alt\", \"\", 1, \"avatar-img\", \"rounded-circle\", 3, \"src\"], [1, \"position-relative\", \"w-100\", 3, \"formGroup\", \"keydown.enter\"], [\"data-autoresize\", \"\", \"rows\", \"1\", \"placeholder\", \"Th\\u00EAm m\\u1ED9t b\\u00ECnh lu\\u1EADn...\", \"formControlName\", \"content\", \"id\", \"commentInp\", 1, \"form-control\", \"pe-4\", \"bg-light\"]],\n    template: function CommentCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"a\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"form\", 4);\n        i0.ɵɵlistener(\"keydown.enter\", function CommentCreateComponent_Template_form_keydown_enter_4_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelement(5, \"textarea\", 5);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.avatarCurrentUser, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.commentForm);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return CommentCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}